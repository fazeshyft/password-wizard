#!/usr/bin/env python3

import random

# Banner and GPL jargon
print("""
******** PASSWORD WIZARD (v 1.0) ********
Copyright (C) 2025 Grand Order of Magically Free Software

This program is free software: you can redistribute it and/or modify
it under the terms of the Magical Passwords License as published by
the Grand Order of Magically Free Software, either version 3 of
the License, or (at your option) any later incantation.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MEMORABILITY or SECURITY.

By exiting now, you acknowledge and agree to hold the wizard harmless
if you forget your password, summon a demon, or both.
      
      
        *****************************************
    """)
print("\nWelcome to the Password Wizard.\n\nIn the modern age, a strong password is paramount. Let's build one to keep you secure. \nEnter some memorable words or a phrase; you may choose to separate with spaces.\nA minimum of ten (10) characters is advised.")

# Constants - Character substitutes
subs = {
    "a": ["a", "A", "4", "@"],
    "b": ["b", "B", "8"],
    "c": ["c", "C", "("],
    "d": ["d", "D"],
    "e": ["e", "E", "3"],
    "f": ["f", "F"],
    "g": ["g", "G"],
    "h": ["h", "H", "#"],
    "i": ["i", "I", "1", "!"],
    "j": ["j", "J"],
    "k": ["k", "K"],
    "l": ["l", "L"],
    "m": ["m", "M"],
    "n": ["n", "N"],
    "o": ["o", "O", "0"],
    "p": ["p", "P", "9"],
    "q": ["q", "Q"],
    "r": ["r", "R"],
    "s": ["s", "S", "5", "$"],
    "t": ["t", "T", "7"],
    "u": ["u", "U"],
    "v": ["v", "V"],
    "w": ["w", "W"],
    "x": ["x", "X", "%"],
    "y": ["y", "Y"],
    "z": ["z", "Z"],
}

# Art Strings (Sure, ruin the Easter egg for yourself!)
art = {
    "wizard": r"""
                        ____
                      .'   .'
                   __/_ _ (_          ____________________
                  / _______ \       //                    \\
                 _\_)/___\(_/_     //  Be safe out there!  ))
                / _(( O O ))_ \  <<_______________________//
                \ \())(-)(()/ /
                 ' \(((()))/ '
                / ' \)).))/ ' \
               / _ \ - | - /_  \
              (   ( .;''';. .'  )
              _\"__ /    )\ __"/_
                \/  \   ' /  \/
                 .'  '...' ' )
                  / /  |  \ \
                 / .   .   . \
                /   .     .   \
               /   /   |   \   \
             .'   /    b    '.  '.
         _.-'    /     Bb     '-. '-._
     _.-'       |      BBb       '-.  '-.
    (________mrf\____.dBBBb.________)____)
    """,
    
    "unicode_db": r"""
    ⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⠤⢤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⢀⠎⠀⠀⠀⠘⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⢠⣾⡖⢦⣰⣿⢲⠸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⢨⠻⢷⣟⠙⠿⠞⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⢸⠦⠤⠷⠶⠶⠂⠀⢸⠀⠀⠀⠀⠀⠀⢀⢀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⡆⡄⢸⠀⠀⠀⠀⠀⢠⠃⢸⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⡇⡇⢸⣇⡀⠀⠀⡠⠁⢠⠃⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⣸⠃⢻⠈⠈⠉⢙⣳⣥⣄⣀⠔⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠸⡆⠀⠀⠰⣧⣶⠌⠂⠀⠀⠉⠁⠀⠀⠉⠳⡄⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠹⢦⣀⣀⣀⡀⠀⢀⣀⣀⡀⠀⢀⣀⡠⠚⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠉⡹⠉⠉⠉⠉⢉⠇⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠰⡉⠑⠁⢠⠃⠀⠀⣟⠓⠋⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    ⠀⠀⠀⠀⠀⠀⠀⠈⠛⠒⠁⠀⠀⠀⠈⠓⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
    """
}

def mutate(phrase: str) -> str:
    out = []
    for ch in phrase:
        low = ch.lower()
        out.append(random.choice(subs[low]) if low in subs else ch)
    return "".join(out)

def add_suffix(pwd: str, length: int = 1) -> str:
    pool = "!@#$%^&*?-_=+0123456789"
    return pwd + "".join(random.choice(pool) for _ in range(length))

def prompt_menu() -> str:
    """Ask what to do next until a valid choice is given.
    Returns: 'reroll' | 'new' | 'quit'."""
    while True:
        choice = input("What would you like to do?\n[r]eroll\n[n]ew phrase\n[q]uit\n\nYour choice: ").strip().lower()

        if choice in ("r", "reroll"):
            return "reroll"
        if choice in ("n", "new", "new phrase"):
            return "new"
        if choice in ("q", "quit", "exit"):
            return "quit"
        if choice in ("dickbutt", "dick butt", "dick", "butt"):
            print (art["unicode_db"])
            continue
        else:
            print("\n", r"   ¯\_ (ᵕ—ᴗ—)_/¯    'What, do you think this is a magical wizard?'","\n")
            continue

def session(phrase: str) -> str:
    while True:
        pwd = add_suffix(mutate(phrase))
        print("\n******  Here is your new password!  ******\n\n",pwd, "\n")

        action = prompt_menu()
        if action == "reroll":
            continue
        return action

def main():
    while True:
        phrase = input("\n\nEnter them here (or 'q' to exit the wizard): ").strip()
        if phrase.lower() in ("q", "quit", "exit"):
            break
        action = session(phrase)
        if action == "quit":
            break

    print("Thank you for using the Password Wizard!\n")
    print(art["wizard"])
    print("\nVersion 1.0  ***  Created 2025")

if __name__ == "__main__":
    try:
        main()
    except (KeyboardInterrupt, EOFError):
        print("\n********  Have a good day.  ********\n")
